<?xml version="1.0" encoding="utf-8"?>

<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               creationComplete="initializeApplication()"
               uncaughtError="onUncaughtError(event)">
    <fx:Declarations>
        <!-- Place non-visual elements (e.g., services, value objects) here -->
        <fx:String id="example">
            <![CDATA[Dim json, result, o
Set json = New VbsJson
Set o = json.Decode(parameters.items("arguments"))
result = json.Encode(o)
]]>
        </fx:String>
    </fx:Declarations>

    <fx:Script>
		<![CDATA[
        import light.book.script.ScriptComponent;
        import light.book.script.ScriptEvent;

        import logging.ConsoleTarget;
        import logging.TextTarget;

        import mx.logging.ILogger;
        import mx.logging.Log;
        import mx.utils.ObjectUtil;

        import by.blooddy.crypto.serialization.JSON;

        private static const log:ILogger = Log.getLogger("ScriptExtensionDemo.mxml");

        private var extension:ScriptComponent;

        private function initializeApplication():void
        {
            Log.addTarget(new ConsoleTarget());
            Log.addTarget(new TextTarget(output));

            log.info("started: debug {0}", Capabilities.isDebugger);
            NativeApplication.nativeApplication.addEventListener(Event.EXITING, onExit, false, 0, true);

            extension = new ScriptComponent("ScriptExtensionDemo");
            extension.addEventListener(ScriptEvent.RESULT, onResult, false, 0, true);
        }

        private function onResult(event:ScriptEvent):void
        {
            var result:Object = by.blooddy.crypto.serialization.JSON.decode(event.level);
            log.info("Code: {0} returned: {1}", event.code, ObjectUtil.toString(result));
        }

        private function onExit(event:Event):void
        {
            extension.dispose();
        }

        private function onClick(event:MouseEvent):void
        {
            var code:int = Math.round(Math.random() * 10000);

            var parameters:Object = {};
            parameters["language"] = "VBScript";
            parameters["timeout"] = 1000 * 60;
            parameters["function"] = "test";
            parameters["allowui"] = true;

            var jsonParameters:String = by.blooddy.crypto.serialization.JSON.encode(parameters);
            log.info("execute() result: " + extension.execute(code, true, true, 10000, jsonParameters, script.text));
        }

        private function onUncaughtError(event:UncaughtErrorEvent):void
        {
            log.error(ObjectUtil.toString(event.error));
        }
        ]]>
	</fx:Script>
    <s:VGroup height="100%" width="100%">
        <s:TextArea id="output" width="100%" height="100%" fontFamily="Courier new" editable="false"/>
        <s:TextArea id="script" width="100%" height="100%" fontFamily="Courier new" editable="true" text="{example}"/>
        <s:Button label="ShowDialog" click="onClick(event)"/>
    </s:VGroup>
</s:Application>