<?xml version="1.0" encoding="utf-8"?>

<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml"
                        creationComplete="initializeApplication()"
                        showStatusBar="false"
        >
    <mx:Script>
		<![CDATA[
        import light.book.script.ScriptComponent;
        import light.book.script.ScriptFault;
        import light.book.script.ScriptResult;

        import logging.ConsoleTarget;
        import logging.TextTarget;

        import mx.logging.ILogger;
        import mx.logging.Log;
        import mx.utils.ObjectUtil;

        private static const log:ILogger = Log.getLogger("ScriptExtensionDemo.mxml");

        [Bindable]
        private var example:String = 'Dim js, result, o\n' +
                'Set js = New JSON\n' +
                'Set o = js.parse(parameters.items("arguments"))\n' +
                'result = js.stringify(o)\n';

        private var extension:ScriptComponent;

        private function initializeApplication():void
        {
            Log.addTarget(new ConsoleTarget());
            Log.addTarget(new TextTarget(output));

            log.info("started: debug {0}", Capabilities.isDebugger);
            NativeApplication.nativeApplication.addEventListener(Event.EXITING, onExit, false, 0, true);

            extension = new ScriptComponent("ScriptExtensionDemo");
            extension.addEventListener(ScriptResult.RESULT, onResult, false, 0, true);
            extension.addEventListener(ScriptFault.FAULT, onError, false, 0, true);
        }

        private function onError(event:ScriptFault):void
        {
            log.error("Code: {0} returned: {1}", event.code, event.error);
        }

        private function onResult(event:ScriptResult):void
        {
            log.info("Code: {0} returned: {1}", event.code, ObjectUtil.toString(event.result));
        }

        private function onExit(event:Event):void
        {
            extension.dispose();
        }

        private function onClick(event:MouseEvent):void
        {
            var parameters:Object = {};
            parameters["number"] = 1;
            parameters["description"] = "Null reference";
            parameters["source"] = "test.vbs";
            parameters["line"] = 567;
            parameters["text"] = "test = a.text";

            if (async.selected)
            {
                var code:int = extension.executeAsync(vbs.selected, 10000, parameters, script.text);
                log.info("execute() code: {0}", code);
            }
            else
            {
                log.info("execute() start");
                var result:Object = extension.executeSync(vbs.selected, 10000, parameters, script.text);
                log.info("execute() result: {0}", ObjectUtil.toString(result));
                log.info("execute() end");
            }
        }
        ]]>
	</mx:Script>
    <mx:VBox height="100%" width="100%">
        <mx:HDividedBox height="100%" width="100%">
            <mx:TextArea id="output" width="100%" height="100%" fontFamily="Courier new" editable="false"/>
            <mx:TextArea id="script" width="100%" height="100%" fontFamily="Courier new" editable="true"
                         text="{example}"/>
        </mx:HDividedBox>
        <mx:HBox>
            <mx:Button label="ShowDialog" click="onClick(event)"/>
            <mx:CheckBox id="async" label="Async"/>
            <mx:CheckBox id="vbs" label="{vbs.selected ? 'VBScript' : 'JScript'}" selected="true"/>
        </mx:HBox>
    </mx:VBox>
</mx:WindowedApplication>