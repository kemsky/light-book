<?xml version="1.0" encoding="utf-8"?>

<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml"
                        creationComplete="initializeApplication()"
                        showStatusBar="false"
        >
    <mx:Script>
		<![CDATA[
        import light.book.script.ScriptComponent;
        import light.book.script.ScriptEvent;

        import logging.ConsoleTarget;
        import logging.TextTarget;

        import mx.logging.ILogger;
        import mx.logging.Log;
        import mx.utils.ObjectUtil;

        import by.blooddy.crypto.serialization.JSON;

        private static const log:ILogger = Log.getLogger("ScriptExtensionDemo.mxml");

        [Bindable]
        private var example:String = 'Dim json, result, o\n' +
        'Set json = New VbsJson\n' +
        'Set o = json.Decode(parameters.items("arguments"))\n' +
        'result = json.Encode(o)\n';

        private var extension:ScriptComponent;

        private function initializeApplication():void
        {
            Log.addTarget(new ConsoleTarget());
            Log.addTarget(new TextTarget(output));

            log.info("started: debug {0}", Capabilities.isDebugger);
            NativeApplication.nativeApplication.addEventListener(Event.EXITING, onExit, false, 0, true);

            extension = new ScriptComponent("ScriptExtensionDemo");
            extension.addEventListener(ScriptEvent.RESULT, onResult, false, 0, true);
        }

        private function onResult(event:ScriptEvent):void
        {
            var result:Object = by.blooddy.crypto.serialization.JSON.decode(event.level);
            log.info("Code: {0} returned: {1}", event.code, ObjectUtil.toString(result));
        }

        private function onExit(event:Event):void
        {
            extension.dispose();
        }

        private function onClick(event:MouseEvent):void
        {
            log.info("execute() start");
            var code:int = Math.round(Math.random() * 10000);

            var parameters:Object = {};
            parameters["language"] = "VBScript";
            parameters["timeout"] = 1000 * 60;
            parameters["function"] = "test";
            parameters["allowui"] = true;

            var jsonParameters:String = by.blooddy.crypto.serialization.JSON.encode(parameters);
            log.info("execute() result: " + extension.execute(code, async.selected, vbs.selected, 10000, jsonParameters, script.text));
            log.info("execute() end");
        }

        ]]>
	</mx:Script>
    <mx:VBox height="100%" width="100%">
        <mx:HDividedBox height="100%" width="100%">
            <mx:TextArea id="output" width="100%" height="100%" fontFamily="Courier new" editable="false"/>
            <mx:TextArea id="script" width="100%" height="100%" fontFamily="Courier new" editable="true" text="{example}"/>
        </mx:HDividedBox>
        <mx:HBox>
            <mx:Button label="ShowDialog" click="onClick(event)"/>
            <mx:CheckBox id="async" label="Async"/>
            <mx:CheckBox id="vbs" label="{vbs.selected ? 'VBScript' : 'JScript'}" selected="true"/>
        </mx:HBox>
    </mx:VBox>
</mx:WindowedApplication>